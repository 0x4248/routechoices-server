const jDBSCAN=function(){let t,n,e,o=[],l=[],i=[],u=f,r=function t(n,e){return Math.abs(e.timestamp-n.timestamp)};function a(t,n){let e=-1,o=t.length,l,i;if(1===arguments.length){for(;++e<o&&!(null!=(l=t[e])&&l<=l);)l=void 0;for(;++e<o;)null!=(i=t[e])&&l>i&&(l=i)}else{for(;++e<o&&!(null!=(l=n.call(t,t[e],e))&&l<=l);)l=void 0;for(;++e<o;)null!=(i=n.call(t,t[e],e))&&l>i&&(l=i)}return l}function c(t,n){let e=-1,o=t.length,l,i;if(1===arguments.length){for(;++e<o&&!(null!=(l=t[e])&&l<=l);)l=void 0;for(;++e<o;)null!=(i=t[e])&&i>l&&(l=i)}else{for(;++e<o&&!(null!=(l=n.call(t,t[e],e))&&l<=l);)l=void 0;for(;++e<o;)null!=(i=n.call(t,t[e],e))&&i>l&&(l=i)}return l}function f(t,n){return Math.sqrt(Math.pow(n.x-t.x,2)+Math.pow(n.y-t.y,2))}function s(t,n){return Math.abs(n.x-t.x)+Math.abs(n.y-t.y)}function d(t,n){let e=t.location.latitude*Math.PI/180,o=t.location.longitude*Math.PI/180,l=n.location.latitude*Math.PI/180,i=n.location.longitude*Math.PI/180,u=l-e,r=i-o,a=Math.sin(u/2)*Math.sin(u/2)+Math.cos(e)*Math.cos(l)*Math.sin(r/2)*Math.sin(r/2);return(6371*(2*Math.atan2(Math.sqrt(a),Math.sqrt(1-a)))).toPrecision(4)}function g(e){let l=[],i=o[e];for(let a=0;a<o.length;a++)e!==a&&(n&&r(o[a],i)<=n&&u(o[a],i)<=t?l.push(a):u(o[a],i)<=t&&l.push(a));return l}function h(t,n,o){l[o-1].push(t),i[t]=o;for(let u=0;u<n.length;u++){let r=n[u];if(void 0===i[r]){i[r]=0;let a=g(r);a.length>=e&&h(r,a,o)}i[r]<1&&(i[r]=o,l[o-1].push(r))}}let $=function(){i=[],l=[];for(let t=0;t<o.length;t++)if(void 0===i[t]){i[t]=0;let n=g(t),u=n.length;if(u<e)i[t]=0;else{l.push([]);let r=l.length;h(t,n,r)}}return i};return $.getClusters=function(){let t=l.length,e=[];for(let i=0;i<t;i++){if(u===f||u===s){e[i]={x:0,y:0};for(let r=0;r<l[i].length;r++)e[i].x+=o[l[i][r]].x,e[i].y+=o[l[i][r]].y;e[i].x/=l[i].length,e[i].y/=l[i].length,e[i].dimension=l[i].length,e[i].parts=l[i]}if(u===d){e[i]={location:{latitude:0,longitude:0,accuracy:0}};for(let g=0;g<l[i].length;g++)e[i].location.latitude+=o[l[i][g]].location.latitude,e[i].location.longitude+=o[l[i][g]].location.longitude,e[i].location.accuracy+=o[l[i][g]].location.accuracy;e[i].dimension=l[i].length,e[i].parts=l[i],e[i].location.latitude/=l[i].length,e[i].location.longitude/=l[i].length,e[i].location.accuracy/=l[i].length}n&&(e[i].duration={},e[i].duration.start=a(l[i],function(t){return o[t].timestamp}),e[i].duration.end=c(l[i],function(t){return o[t].timestamp}),e[i].duration.span=e[i].duration.end-e[i].duration.start)}return e},$.data=function(t){return 0===arguments.length?o:(Array.isArray(t)&&(o=t),$)},$.eps=function(n){return 0===arguments.length?t:("number"==typeof n&&(t=n),$)},$.timeEps=function(t){return 0===arguments.length?n:("number"==typeof t&&(n=t),$)},$.minPts=function(t){return 0===arguments.length?e:("number"==typeof t&&(e=t),$)},$.distance=function(t){if(1===arguments.length){if("string"==typeof t)switch(t){case"HAVERSINE":u=d;break;case"EUCLIDEAN":default:u=f;break;case"MANHATTAN":u=s}else"function"==typeof t&&(u=t)}return $},$.timeDistance=function(t){return 1===arguments.length&&(r=t),$},$};!function(t,n){"function"==typeof define&&define.amd?define([],n):"object"==typeof module&&module.exports?module.exports=n():t.jDBSCAN=n()}("undefined"!=typeof self?self:this,function(){return jDBSCAN});
